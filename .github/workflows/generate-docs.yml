name: Generate and Upload Wiki and README Documentation

on:
  push:
    branches:
      - main

concurrency:
  group: generate-docs
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-docs:
    if: |
      github.event.head_commit.message != 'Update auto-generated README.md' &&
      !contains(join(github.event.commits.*.modified, ','), 'README.md')
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: jazzy

      - name: Clone and install arcscfg
        run: |
          git clone https://github.com/csun-arcs/arcscfg.git
          pip install -e ./arcscfg

      - name: Install dependencies with arcscfg
        run: |
          arcscfg -d -v debug install -id -rd jazzy -df cohort_ros2_jazzy_ubuntu_noble.yaml

      - name: Setup workspace with arcscfg
        run: |
          arcscfg -d -v debug setup -wc cohort_jazzy.yaml -w ros_ws -t https

      - name: Debug directory tree
        run: |
          find .

      - name: Build workspace with arcscfg
        run: |
          source /opt/ros/jazzy/setup.bash
          arcscfg -d -v debug build -w ros_ws -u /opt/ros/jazzy -bs no_cuda

      - name: Generate launch docs
        shell: bash
        run: |
          source ros_ws/install/setup.bash
          set -euo pipefail
          python3 "./ros_ws/src/${{ github.event.repository.name }}/scripts/generate_launch_docs.py" \
            --workspace "${GITHUB_WORKSPACE}/ros_ws" \
            --package-name "${{ github.event.repository.name }}"

      - name: List generated launch docs for this package
        run: |
          find ./ros_ws/launch_docs/${{ github.event.repository.name }} -name '*.md' || echo "No launch docs found"

      - name: Clone GitHub Wiki
        run: |
          git clone "https://github.com/${{ github.repository }}.wiki.git" wiki

      - name: Move generated docs to wiki directory
        run: |
          set -euo pipefail
          mkdir -p wiki/launch_args
          cp ./ros_ws/launch_docs/${{ github.event.repository.name }}/*.md wiki/launch_args/

      - name: Generate Home.md from template
        run: |
          set -euo pipefail
          pip install jinja2
          python3 "./ros_ws/src/${{ github.event.repository.name }}/scripts/generate_template_md.py" \
            --template-dir "wiki" \
            --template-name "Home.template.md" \
            --output "wiki/Home.md" \
            --launch-docs-dir "ros_ws/launch_docs" \
            --workspace "./ros_ws" \
            --package-name "${{ github.event.repository.name }}"

      - name: Publish to GitHub Wiki
        uses: Andrew-Chen-Wang/github-wiki-action@v4
        with:
          path: wiki/

      - name: Generate README.md from template
        run: |
          set -euo pipefail
          pip install jinja2
          python3 "./ros_ws/src/${{ github.event.repository.name }}/scripts/generate_template_md.py" \
            --template-dir "./ros_ws/src/${{ github.event.repository.name }}/templates/" \
            --template-name "README.template.md" \
            --output "./ros_ws/src/${{ github.event.repository.name }}/README.md" \
            --launch-docs-dir "ros_ws/launch_docs" \
            --workspace "./ros_ws" \
            --package-name "${{ github.event.repository.name }}"

      - name: Clone repo with token
        run: |
          git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" repo_clone
          cp -f ./ros_ws/src/${{ github.event.repository.name }}/README.md repo_clone/README.md

      - name: Create README update PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          cd repo_clone

          BRANCH_NAME="autogen/readme-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add README.md
          git diff --cached --quiet && echo "No changes to commit." && exit 0

          git commit -m "Update auto-generated README.md"
          git push origin "$BRANCH_NAME"

          gh pr create \
            --title "Update auto-generated README.md" \
            --body "This PR updates the auto-generated \`README.md\` file." \
            --head "$BRANCH_NAME" \
            --base "main"

      - name: Merge README update PR
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          cd repo_clone

          # Find the PR number created by this branch
          BRANCH_NAME=$(git branch --show-current)
          PR_NUMBER=$(gh pr list --head "$BRANCH_NAME" --json number --jq '.[0].number')

          # Merge it
          gh pr merge "$PR_NUMBER" --merge --delete-branch --admin
